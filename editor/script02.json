{
	"config": {},
	"scripts": [
		{
			"name": "Demo",
			"source": [
				"const { WebGLRenderer } = await import(\"../third_party/three.module.js\");",
				"const { Effect } = await import(\"../effects/intro.js\");",
				"const { Composer } = await import(\"../js/Composer.js\");",
				"",
				"const dom = resources.get( 'dom' );",
				"",
				"const canvas = document.createElement(\"canvas\");",
				"dom.append(canvas);",
				"",
				"const context = canvas.getContext(\"webgl\");",
				"",
				"const renderer = new WebGLRenderer({ canvas, context, antialias: true });",
				"renderer.setPixelRatio(window.devicePixelRatio);",
				"renderer.setClearColor(0, 0);",
				"renderer.extensions.get(\"OES_standard_derivatives\");",
				"renderer.extensions.get(\"EXT_shader_texture_lod\");",
				"",
				"const composer = new Composer(renderer, 1, 1);",
				"",
				"const effects = [];",
				"const intro = new Effect(renderer);",
				"",
				"effects.push(intro);",
				"",
				"resources.set( 'camera', intro.camera );",
				"",
				"/*",
				"const loading = document.querySelector(\"#loading\");",
				"const start = document.querySelector(\"#start\");",
				"start.addEventListener(\"click\", () => {",
				"  run();",
				"});",
				"*/",
				"",
				"function render(t) {",
				"  intro.render(t);",
				"  composer.render(intro.post.fbo);",
				"}",
				"",
				"function resize() {",
				"  let w = dom.clientWidth;",
				"  let h = dom.clientHeight;",
				"  renderer.setSize(w, h);",
				"",
				"  const dPR = window.devicePixelRatio;",
				"  w *= dPR;",
				"  h *= dPR;",
				"  intro.setSize(w, h);",
				"  composer.setSize(w, h);",
				"}",
				"",
				"window.addEventListener(\"resize\", resize);",
				"",
				"resources.set('render', render);",
				"",
				"",
				"const audio = document.createElement(\"audio\");",
				"audio.src = \"../assets/track.mp3\";",
				"audio.preload = true;",
				"const audioPromise = new Promise((resolve, reject) => {",
				"  audio.addEventListener(\"canplay\", (e) => {",
				"    resolve();",
				"  });",
				"});",
				"",
				"resources.set('audio', audio);",
				"",
				"window.promises = [];",
				"",
				"async function init() {",
				"  console.log(\"Loading...\");",
				"  const preload = [audioPromise];",
				"  for (const effect of effects) {",
				"    preload.push(effect.initialise());",
				"  }",
				"  await Promise.all(preload);",
				"  resize();",
				"  // loading.style.display = \"none\";",
				"  // start.style.display = \"flex\";",
				"  console.log(\"Ready...\");",
				"  //run();",
				"}",
				"",
				"/*",
				"function run() {",
				"  start.style.display = \"none\";",
				"  console.log(\"Start\");",
				"  audio.play();",
				"  render();",
				"}",
				"*/",
				"",
				"init();"
			]
		}
	],
	"effects": [
		{
			"name": "Render",
			"source": [
				"var parameters = {};",
				"",
				"const render = resources.get( 'render' );",
				"",
				"function start(){}",
				"",
				"function end(){}",
				"",
				"function update( progress ){",
				"",
				"\trender( progress * 150 );",
				"",
				"}"
			]
		},
		{
			"name": "Audio Player",
			"source": [
				"var audio = resources.get( 'audio' );",
				"",
				"function start(){",
				"",
				"\tplayer.setAudio( audio );",
				"",
				"}",
				"",
				"function end(){",
				"",
				"\tplayer.setAudio( null );",
				"",
				"}",
				"",
				"function update( progress ){}"
			]
		},
		{
			"name": "Camera Intro",
			"source": [
				"const camera = resources.get( 'camera' );",
				"const MathPI2 = Math.PI / 2;",
				"",
				"function start(){",
				"",
				"\tcamera.rotation.set( - Math.PI / 2, 0, 0 );",
				"",
				"}",
				"",
				"function end(){}",
				"",
				"function update( progress ){",
				"\t",
				"\tconst invProgress = 1 - progress;",
				"",
				"\tcamera.position.set( 0, ( invProgress * 100 ) + 1, 0 );",
				"\tcamera.rotation.x = - MathPI2 * progress;",
				"",
				"}"
			]
		},
		{
			"name": "Effect",
			"source": [
				"const camera = resources.get( 'camera' );",
				"",
				"function start(){",
				"",
				"\tcamera.rotation.set( 0, 0, 0 );",
				"",
				"}",
				"",
				"function end(){}",
				"",
				"function update( progress ){",
				"\t",
				"\tconst invProgress = 1 - progress;",
				"",
				"\tcamera.position.set( 0, 0, 2 );",
				"",
				"}"
			]
		}
	],
	"animations": [
		{
			"name": "Audio",
			"start": 0,
			"end": 93.28125,
			"layer": 0,
			"effectId": 1,
			"enabled": true
		},
		{
			"name": "Animation",
			"start": 0,
			"end": 10.9375,
			"layer": 1,
			"effectId": 2,
			"enabled": true
		},
		{
			"name": "",
			"start": 0,
			"end": 93.3125,
			"layer": 2,
			"effectId": 0,
			"enabled": true
		},
		{
			"name": "Animation",
			"start": 10.96875,
			"end": 18.09375,
			"layer": 1,
			"effectId": 3,
			"enabled": true
		}
	]
}
