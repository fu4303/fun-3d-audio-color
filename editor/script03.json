{
	"config": {},
	"scripts": [
		{
			"name": "Demo",
			"source": [
				"const { Vector3, WebGL1Renderer } = await import(\"../third_party/three.module.js\");",
				"const { Effect } = await import(\"../effects/intro.js\");",
				"const { Composer } = await import(\"../js/Composer.js\");",
				"",
				"const dom = resources.get( 'dom' );",
				"",
				"const renderer = new WebGL1Renderer({ antialias: true });",
				"renderer.setPixelRatio(window.devicePixelRatio);",
				"renderer.setClearColor(0, 0);",
				"renderer.extensions.get(\"OES_standard_derivatives\");",
				"renderer.extensions.get(\"EXT_shader_texture_lod\");",
				"dom.append(renderer.domElement);",
				"",
				"const composer = new Composer(renderer, 1, 1);",
				"",
				"const effects = [];",
				"",
				"const intro = new Effect(renderer);",
				"effects.push(intro);",
				"",
				"function render(t) {",
				"  intro.render(t);",
				"  composer.render(intro.post.fbo);",
				"}",
				"",
				"function resize() {",
				"  let w = dom.clientWidth;",
				"  let h = dom.clientHeight;",
				"  renderer.setSize(w, h);",
				"",
				"  const dPR = window.devicePixelRatio;",
				"  w *= dPR;",
				"  h *= dPR;",
				"  intro.setSize(w, h);",
				"  composer.setSize(w, h);",
				"}",
				"",
				"window.addEventListener(\"resize\", resize);",
				"",
				"",
				"const audio = document.createElement(\"audio\");",
				"audio.src = \"../assets/track.mp3\";",
				"audio.preload = true;",
				"const audioPromise = new Promise((resolve, reject) => {",
				"  audio.addEventListener(\"canplay\", (e) => {",
				"    resolve();",
				"  });",
				"});",
				"",
				"window.promises = [];",
				"",
				"async function init() {",
				"  console.log(\"Loading...\");",
				"  const preload = [audioPromise];",
				"  for (const effect of effects) {",
				"    preload.push(effect.initialise());",
				"  }",
				"  await Promise.all(preload);",
				"  resize();",
				"  console.log(\"Ready...\");",
				"}",
				"",
				"init();",
				"",
				"intro.camera.fov = 50;",
				"intro.camera.updateProjectionMatrix();",
				"",
				"const cameraTarget = new Vector3();",
				"",
				"resources.set('audio', audio);",
				"resources.set('render', render);",
				"resources.set('camera', intro.camera);",
				"resources.set('cameraTarget', cameraTarget);"
			]
		}
	],
	"effects": [
		{
			"name": "Render",
			"source": [
				"var parameters = {};",
				"",
				"const render = resources.get( 'render' );",
				"",
				"function start(){}",
				"",
				"function end(){}",
				"",
				"function update( progress ){",
				"",
				"\trender( progress * 150 );",
				"",
				"}"
			]
		},
		{
			"name": "Audio Player",
			"source": [
				"var audio = resources.get( 'audio' );",
				"",
				"function start(){",
				"",
				"\tplayer.setAudio( audio );",
				"",
				"}",
				"",
				"function end(){",
				"",
				"\tplayer.setAudio( null );",
				"",
				"}",
				"",
				"function update( progress ){}"
			]
		},
		{
			"name": "Camera Intro",
			"source": [
				"const camera = resources.get( 'camera' );",
				"const target = resources.get( 'cameraTarget' );",
				"",
				"function start(){}",
				"",
				"function end(){}",
				"",
				"function update( progress ){",
				"\t",
				"\tconst invProgress = 1 - progress;",
				"",
				"\tcamera.position.set( 0,  - 50 * invProgress, - 5 );",
				"",
				"\ttarget.x = Math.cos( progress * 8 ) * 2;",
				"\ttarget.y = Math.sin( progress * 4 ) * 2;",
				"\ttarget.z = - 50;",
				"\tcamera.lookAt( target );",
				"",
				"}"
			]
		},
		{
			"name": "Camera Side",
			"source": [
				"const camera = resources.get( 'camera' );",
				"const target = resources.get( 'cameraTarget' );",
				"",
				"function start(){}",
				"",
				"function end(){}",
				"",
				"function update( progress ){",
				"\t",
				"\tconst invProgress = 1 - progress;",
				"",
				"\tcamera.position.set( 4 - progress * 2, 5, - 7 * invProgress - 2 );",
				"\t",
				"\ttarget.x = Math.sin( progress * 4 ) * 2;",
				"\ttarget.y = Math.cos( progress * 6 );",
				"\ttarget.z = - 11 * invProgress + 2;",
				"\tcamera.lookAt( target );",
				"\t// camera.rotation.z = - Math.PI / 2;",
				"",
				"}"
			]
		},
		{
			"name": "Camera Back",
			"source": [
				"const camera = resources.get( 'camera' );",
				"const target = resources.get( 'cameraTarget' );",
				"",
				"function start(){}",
				"",
				"function end(){}",
				"",
				"function update( progress ){",
				"\t",
				"\tconst invProgress = 1 - progress;",
				"",
				"\tcamera.position.set( 0, 0, invProgress * 10 + 4 );",
				"\t",
				"\ttarget.set( 0, - 8 * invProgress, 0 );",
				"\tcamera.lookAt( target );",
				"",
				"}"
			]
		},
		{
			"name": "Camera Orbit 1",
			"source": [
				"const camera = resources.get( 'camera' );",
				"const target = resources.get( 'cameraTarget' );",
				"",
				"function start(){}",
				"",
				"function end(){}",
				"",
				"function update( progress ){",
				"\t",
				"\tconst invProgress = 1 - progress;",
				"\t",
				"\tconst amount = - 10;",
				"\tconst distance = 4;",
				"",
				"\tcamera.position.x = Math.cos( progress * amount ) * distance;",
				"\tcamera.position.y = 0;",
				"\tcamera.position.z = Math.sin( progress * amount ) * distance;",
				"",
				"\ttarget.x = Math.cos( progress * 8 ) * 0.25;",
				"\ttarget.y = Math.sin( progress * 12 ) * 0.25;",
				"\ttarget.z = Math.sin( progress * 6 ) * 0.5;",
				"\tcamera.lookAt( target );",
				"\t",
				"}"
			]
		},
		{
			"name": "Camera Orbit 2",
			"source": [
				"const camera = resources.get( 'camera' );",
				"const target = resources.get( 'cameraTarget' );",
				"",
				"function start(){}",
				"",
				"function end(){}",
				"",
				"function update( progress ){",
				"\t",
				"\tconst invProgress = 1 - progress;",
				"\t",
				"\tconst amount = 7;",
				"\tconst distance = 3;",
				"",
				"\tcamera.position.x = Math.cos( progress * amount ) * distance;",
				"\tcamera.position.y = 0;",
				"\tcamera.position.z = Math.sin( progress * amount ) * distance;",
				"",
				"\ttarget.x = Math.cos( progress * 8 ) * 0.5;",
				"\ttarget.y = Math.sin( progress * 12 ) * 0.5;",
				"\ttarget.z = Math.sin( progress * 6 );",
				"\tcamera.lookAt( target );",
				"}"
			]
		},
		{
			"name": "Camera Top",
			"source": [
				"const camera = resources.get( 'camera' );",
				"",
				"function start(){}",
				"",
				"function end(){}",
				"",
				"function update( progress ){",
				"\t",
				"\tconst invProgress = 1 - progress;",
				"",
				"\tcamera.position.set( 0, 6, progress * 6 );",
				"\tcamera.rotation.set( - Math.PI / 2, 0, 0 );",
				"",
				"}"
			]
		},
		{
			"name": "Camera Side Far",
			"source": [
				"const camera = resources.get( 'camera' );",
				"",
				"function start(){}",
				"",
				"function end(){}",
				"",
				"function update( progress ){",
				"\t",
				"\tconst invProgress = 1 - progress;",
				"",
				"\tcamera.position.set( 4 - progress * 2, 5, - 7 * invProgress - 3 );",
				"\tcamera.rotation.set( 0, Math.PI / 2, 0 );",
				"",
				"}"
			]
		}
	],
	"animations": [
		{
			"name": "Audio",
			"start": 0,
			"end": 93.28125,
			"layer": 0,
			"effectId": 1,
			"enabled": true
		},
		{
			"name": "",
			"start": 0,
			"end": 10.869036255162927,
			"layer": 1,
			"effectId": 2,
			"enabled": true
		},
		{
			"name": "",
			"start": 0,
			"end": 93.3125,
			"layer": 3,
			"effectId": 0,
			"enabled": true
		},
		{
			"name": "",
			"start": 10.873625516291883,
			"end": 21.956048636744423,
			"layer": 2,
			"effectId": 3,
			"enabled": true
		},
		{
			"name": "",
			"start": 21.94687011448651,
			"end": 32.89155350639713,
			"layer": 1,
			"effectId": 4,
			"enabled": true
		},
		{
			"name": "",
			"start": 32.8949555337806,
			"end": 43.90522361680466,
			"layer": 2,
			"effectId": 5,
			"enabled": true
		},
		{
			"name": "",
			"start": 43.88178962690344,
			"end": 54.76260883029899,
			"layer": 1,
			"effectId": 6,
			"enabled": true
		},
		{
			"name": "",
			"start": 54.769329382685434,
			"end": 65.8384155893726,
			"layer": 2,
			"effectId": 5,
			"enabled": true
		},
		{
			"name": "",
			"start": 65.83409090012138,
			"end": 76.81118804358601,
			"layer": 1,
			"effectId": 6,
			"enabled": true
		},
		{
			"name": "",
			"start": 76.80023880904011,
			"end": 93.29886084431503,
			"layer": 2,
			"effectId": 7,
			"enabled": true
		},
		{
			"name": "",
			"start": 93.43853067859028,
			"end": 100.84393608399559,
			"layer": 4,
			"effectId": 8,
			"enabled": true
		}
	]
}
